<!-- NOTE: TAO TAI KHOAN O FIREBASE -->
<!-- https://notepad.vn/noidungbuoihoc -->
<!-- noi dung bai học -->

lam xong nen file lai 
dat ten
NguyenVanA-DBP-C4K-GB01-B1
 ho va ten + DBP + C4K + TEN LOP(WI03) + Buoi 12

NguyMyLinh-DBP-C4K-WI03-B5
xong roi ghi 
Em đã hiểu cách nhận, đọc và submit bài tập của buổi Lab rồi ạ

//noi dung bai hoc 


B1: Tạo file index.html và thư mục Controller (có file controller.js và db.js)
B2: Tạo file db.js trong thư mục Controller (dùng để call api)
    + Khai báo 2 constant SP_NAM="men's clothing" và SP_NU ="women's clothing"
    + Tạo sự kiện windows.onload để gọi hàm loadData() mục đích là load dữ liệu.loadData sẽ dùng thêm 2 keywords mới là async và await (Bất đồng bộ trong Javascript) => Mục đích tránh việc lồng quá nhiều then. Dữ liệu sẽ là dạng JSON ({key:"key",value:"value"}
    + Từ khóa import / export (Lưu ý script type='module')
    + Hàm initProducts có nhiệm vụ chuyển tất cả dữ liệu JSON -> Product,Men,Women qua phương thức .map(initProduct) (map() sẽ duyệt từng phần hàng và chuyển chúng thành sản phẩm Nam/Nữ hoặc sản phẩm khác).
+ Tạo hàm initProduct nhận vào tham số (data-data ở đây sẽ là 1 hàng trong danh sách sản phẩm) nhằm để chuyển dữ liệu từ JSON -> Product(Name,Price)
      + Nếu sản phẩm là Nam sẽ trả về MenCloth(data['title'],data['price'])
      + Nếu sản phẩm là Nữ sẽ trả về WomenCloth(data['title'],data['price'])
      + Còn lại sẽ trả về Product(data['title'],data['price'])
    
B3: Tạo class Product 
    + # là thuộc tính private (chỉ riêng lớp Product được sử dụng)
    + constructor(name,price) => Là hàm khởi tạo với 2 đối tượng name và price
    + ToPrice() và GetName() là 2 phương thức được dùng để lấy giá và tên của sản phẩm hiện tại
    + SetPrice(price) và SetName(name) là 2 phương thức được dùng để gán giá trị mới cho sản phẩm hiện tại
B4: Tạo class MenCloth extends Product với keyword extends là kế thừa
    + Tạo hàm constructor(name, price) : Lưu ý mọi thuộc tính có dấu # đằng trước thì lớp con sẽ không thể truy xuất được mà phải thông qua từ khóa super(name,price) (Ở đây sẽ gọi lại constructor của lớp Product)
    + ToPrice() sẽ gọi đến super.Toprice() (giá gốc) sau đó nhân với 90% (tức 0.9)
B5: Tạo class WomenCloth extends Product với keyword extends là kế thừa
    + Tạo hàm constructor(name, price) : Lưu ý mọi thuộc tính có dấu # đằng trước thì lớp con sẽ không thể truy xuất được mà phải thông qua từ khóa super(name,price) (Ở đây sẽ gọi lại constructor của lớp Product)
    + ToPrice() sẽ gọi đến super.Toprice() (giá gốc) sau đó nhân với 85% (tức 0.85)